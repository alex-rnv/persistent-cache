// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dto.proto

package com.alexrnv.tripgen.dto;

public final class DataObjects {
  private DataObjects() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code com.alexrnv.tripgen.dto.EventType}
   */
  public enum EventType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CALL_START = 0;</code>
     */
    CALL_START(0, 0),
    /**
     * <code>LOCATION_UPDATE = 1;</code>
     */
    LOCATION_UPDATE(1, 1),
    /**
     * <code>CALL_END = 2;</code>
     */
    CALL_END(2, 2),
    ;

    /**
     * <code>CALL_START = 0;</code>
     */
    public static final int CALL_START_VALUE = 0;
    /**
     * <code>LOCATION_UPDATE = 1;</code>
     */
    public static final int LOCATION_UPDATE_VALUE = 1;
    /**
     * <code>CALL_END = 2;</code>
     */
    public static final int CALL_END_VALUE = 2;


    public final int getNumber() { return value; }

    public static EventType valueOf(int value) {
      switch (value) {
        case 0: return CALL_START;
        case 1: return LOCATION_UPDATE;
        case 2: return CALL_END;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EventType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<EventType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EventType>() {
            public EventType findValueByNumber(int number) {
              return EventType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.alexrnv.tripgen.dto.DataObjects.getDescriptor().getEnumTypes().get(0);
    }

    private static final EventType[] VALUES = values();

    public static EventType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private EventType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.alexrnv.tripgen.dto.EventType)
  }

  public interface ProbeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.alexrnv.tripgen.dto.Probe)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bytes sensorId = 1;</code>
     */
    boolean hasSensorId();
    /**
     * <code>required bytes sensorId = 1;</code>
     */
    com.google.protobuf.ByteString getSensorId();

    /**
     * <code>required int64 id = 2;</code>
     */
    boolean hasId();
    /**
     * <code>required int64 id = 2;</code>
     */
    long getId();

    /**
     * <code>optional bytes cellId = 3;</code>
     */
    boolean hasCellId();
    /**
     * <code>optional bytes cellId = 3;</code>
     */
    com.google.protobuf.ByteString getCellId();

    /**
     * <code>optional double cellLat = 4;</code>
     */
    boolean hasCellLat();
    /**
     * <code>optional double cellLat = 4;</code>
     */
    double getCellLat();

    /**
     * <code>optional double cellLon = 5;</code>
     */
    boolean hasCellLon();
    /**
     * <code>optional double cellLon = 5;</code>
     */
    double getCellLon();

    /**
     * <code>optional int64 timestamp = 6;</code>
     */
    boolean hasTimestamp();
    /**
     * <code>optional int64 timestamp = 6;</code>
     */
    long getTimestamp();

    /**
     * <code>required .com.alexrnv.tripgen.dto.EventType eventType = 7;</code>
     */
    boolean hasEventType();
    /**
     * <code>required .com.alexrnv.tripgen.dto.EventType eventType = 7;</code>
     */
    com.alexrnv.tripgen.dto.DataObjects.EventType getEventType();
  }
  /**
   * Protobuf type {@code com.alexrnv.tripgen.dto.Probe}
   */
  public static final class Probe extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.alexrnv.tripgen.dto.Probe)
      ProbeOrBuilder {
    // Use Probe.newBuilder() to construct.
    private Probe(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Probe(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Probe defaultInstance;
    public static Probe getDefaultInstance() {
      return defaultInstance;
    }

    public Probe getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Probe(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              sensorId_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              id_ = input.readInt64();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              cellId_ = input.readBytes();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              cellLat_ = input.readDouble();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              cellLon_ = input.readDouble();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              timestamp_ = input.readInt64();
              break;
            }
            case 56: {
              int rawValue = input.readEnum();
              com.alexrnv.tripgen.dto.DataObjects.EventType value = com.alexrnv.tripgen.dto.DataObjects.EventType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(7, rawValue);
              } else {
                bitField0_ |= 0x00000040;
                eventType_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.alexrnv.tripgen.dto.DataObjects.internal_static_com_alexrnv_tripgen_dto_Probe_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.alexrnv.tripgen.dto.DataObjects.internal_static_com_alexrnv_tripgen_dto_Probe_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.alexrnv.tripgen.dto.DataObjects.Probe.class, com.alexrnv.tripgen.dto.DataObjects.Probe.Builder.class);
    }

    public static com.google.protobuf.Parser<Probe> PARSER =
        new com.google.protobuf.AbstractParser<Probe>() {
      public Probe parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Probe(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Probe> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SENSORID_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString sensorId_;
    /**
     * <code>required bytes sensorId = 1;</code>
     */
    public boolean hasSensorId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes sensorId = 1;</code>
     */
    public com.google.protobuf.ByteString getSensorId() {
      return sensorId_;
    }

    public static final int ID_FIELD_NUMBER = 2;
    private long id_;
    /**
     * <code>required int64 id = 2;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 id = 2;</code>
     */
    public long getId() {
      return id_;
    }

    public static final int CELLID_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString cellId_;
    /**
     * <code>optional bytes cellId = 3;</code>
     */
    public boolean hasCellId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bytes cellId = 3;</code>
     */
    public com.google.protobuf.ByteString getCellId() {
      return cellId_;
    }

    public static final int CELLLAT_FIELD_NUMBER = 4;
    private double cellLat_;
    /**
     * <code>optional double cellLat = 4;</code>
     */
    public boolean hasCellLat() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional double cellLat = 4;</code>
     */
    public double getCellLat() {
      return cellLat_;
    }

    public static final int CELLLON_FIELD_NUMBER = 5;
    private double cellLon_;
    /**
     * <code>optional double cellLon = 5;</code>
     */
    public boolean hasCellLon() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional double cellLon = 5;</code>
     */
    public double getCellLon() {
      return cellLon_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 6;
    private long timestamp_;
    /**
     * <code>optional int64 timestamp = 6;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int64 timestamp = 6;</code>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    public static final int EVENTTYPE_FIELD_NUMBER = 7;
    private com.alexrnv.tripgen.dto.DataObjects.EventType eventType_;
    /**
     * <code>required .com.alexrnv.tripgen.dto.EventType eventType = 7;</code>
     */
    public boolean hasEventType() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required .com.alexrnv.tripgen.dto.EventType eventType = 7;</code>
     */
    public com.alexrnv.tripgen.dto.DataObjects.EventType getEventType() {
      return eventType_;
    }

    private void initFields() {
      sensorId_ = com.google.protobuf.ByteString.EMPTY;
      id_ = 0L;
      cellId_ = com.google.protobuf.ByteString.EMPTY;
      cellLat_ = 0D;
      cellLon_ = 0D;
      timestamp_ = 0L;
      eventType_ = com.alexrnv.tripgen.dto.DataObjects.EventType.CALL_START;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSensorId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEventType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, sensorId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, cellId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(4, cellLat_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(5, cellLon_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(6, timestamp_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeEnum(7, eventType_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, sensorId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, cellId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, cellLat_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, cellLon_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, timestamp_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, eventType_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.alexrnv.tripgen.dto.DataObjects.Probe parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alexrnv.tripgen.dto.DataObjects.Probe parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alexrnv.tripgen.dto.DataObjects.Probe parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alexrnv.tripgen.dto.DataObjects.Probe parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alexrnv.tripgen.dto.DataObjects.Probe parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.alexrnv.tripgen.dto.DataObjects.Probe parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.alexrnv.tripgen.dto.DataObjects.Probe parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.alexrnv.tripgen.dto.DataObjects.Probe parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.alexrnv.tripgen.dto.DataObjects.Probe parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.alexrnv.tripgen.dto.DataObjects.Probe parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.alexrnv.tripgen.dto.DataObjects.Probe prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.alexrnv.tripgen.dto.Probe}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.alexrnv.tripgen.dto.Probe)
        com.alexrnv.tripgen.dto.DataObjects.ProbeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alexrnv.tripgen.dto.DataObjects.internal_static_com_alexrnv_tripgen_dto_Probe_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alexrnv.tripgen.dto.DataObjects.internal_static_com_alexrnv_tripgen_dto_Probe_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alexrnv.tripgen.dto.DataObjects.Probe.class, com.alexrnv.tripgen.dto.DataObjects.Probe.Builder.class);
      }

      // Construct using com.alexrnv.tripgen.dto.DataObjects.Probe.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        sensorId_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        cellId_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        cellLat_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        cellLon_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        timestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        eventType_ = com.alexrnv.tripgen.dto.DataObjects.EventType.CALL_START;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.alexrnv.tripgen.dto.DataObjects.internal_static_com_alexrnv_tripgen_dto_Probe_descriptor;
      }

      public com.alexrnv.tripgen.dto.DataObjects.Probe getDefaultInstanceForType() {
        return com.alexrnv.tripgen.dto.DataObjects.Probe.getDefaultInstance();
      }

      public com.alexrnv.tripgen.dto.DataObjects.Probe build() {
        com.alexrnv.tripgen.dto.DataObjects.Probe result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.alexrnv.tripgen.dto.DataObjects.Probe buildPartial() {
        com.alexrnv.tripgen.dto.DataObjects.Probe result = new com.alexrnv.tripgen.dto.DataObjects.Probe(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sensorId_ = sensorId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.cellId_ = cellId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.cellLat_ = cellLat_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.cellLon_ = cellLon_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.eventType_ = eventType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.alexrnv.tripgen.dto.DataObjects.Probe) {
          return mergeFrom((com.alexrnv.tripgen.dto.DataObjects.Probe)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.alexrnv.tripgen.dto.DataObjects.Probe other) {
        if (other == com.alexrnv.tripgen.dto.DataObjects.Probe.getDefaultInstance()) return this;
        if (other.hasSensorId()) {
          setSensorId(other.getSensorId());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasCellId()) {
          setCellId(other.getCellId());
        }
        if (other.hasCellLat()) {
          setCellLat(other.getCellLat());
        }
        if (other.hasCellLon()) {
          setCellLon(other.getCellLon());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasEventType()) {
          setEventType(other.getEventType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSensorId()) {
          
          return false;
        }
        if (!hasId()) {
          
          return false;
        }
        if (!hasEventType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.alexrnv.tripgen.dto.DataObjects.Probe parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.alexrnv.tripgen.dto.DataObjects.Probe) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString sensorId_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes sensorId = 1;</code>
       */
      public boolean hasSensorId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bytes sensorId = 1;</code>
       */
      public com.google.protobuf.ByteString getSensorId() {
        return sensorId_;
      }
      /**
       * <code>required bytes sensorId = 1;</code>
       */
      public Builder setSensorId(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        sensorId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes sensorId = 1;</code>
       */
      public Builder clearSensorId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sensorId_ = getDefaultInstance().getSensorId();
        onChanged();
        return this;
      }

      private long id_ ;
      /**
       * <code>required int64 id = 2;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 id = 2;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>required int64 id = 2;</code>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000002;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 id = 2;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        id_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString cellId_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes cellId = 3;</code>
       */
      public boolean hasCellId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bytes cellId = 3;</code>
       */
      public com.google.protobuf.ByteString getCellId() {
        return cellId_;
      }
      /**
       * <code>optional bytes cellId = 3;</code>
       */
      public Builder setCellId(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        cellId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes cellId = 3;</code>
       */
      public Builder clearCellId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        cellId_ = getDefaultInstance().getCellId();
        onChanged();
        return this;
      }

      private double cellLat_ ;
      /**
       * <code>optional double cellLat = 4;</code>
       */
      public boolean hasCellLat() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional double cellLat = 4;</code>
       */
      public double getCellLat() {
        return cellLat_;
      }
      /**
       * <code>optional double cellLat = 4;</code>
       */
      public Builder setCellLat(double value) {
        bitField0_ |= 0x00000008;
        cellLat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double cellLat = 4;</code>
       */
      public Builder clearCellLat() {
        bitField0_ = (bitField0_ & ~0x00000008);
        cellLat_ = 0D;
        onChanged();
        return this;
      }

      private double cellLon_ ;
      /**
       * <code>optional double cellLon = 5;</code>
       */
      public boolean hasCellLon() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional double cellLon = 5;</code>
       */
      public double getCellLon() {
        return cellLon_;
      }
      /**
       * <code>optional double cellLon = 5;</code>
       */
      public Builder setCellLon(double value) {
        bitField0_ |= 0x00000010;
        cellLon_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double cellLon = 5;</code>
       */
      public Builder clearCellLon() {
        bitField0_ = (bitField0_ & ~0x00000010);
        cellLon_ = 0D;
        onChanged();
        return this;
      }

      private long timestamp_ ;
      /**
       * <code>optional int64 timestamp = 6;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int64 timestamp = 6;</code>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional int64 timestamp = 6;</code>
       */
      public Builder setTimestamp(long value) {
        bitField0_ |= 0x00000020;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 timestamp = 6;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000020);
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      private com.alexrnv.tripgen.dto.DataObjects.EventType eventType_ = com.alexrnv.tripgen.dto.DataObjects.EventType.CALL_START;
      /**
       * <code>required .com.alexrnv.tripgen.dto.EventType eventType = 7;</code>
       */
      public boolean hasEventType() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required .com.alexrnv.tripgen.dto.EventType eventType = 7;</code>
       */
      public com.alexrnv.tripgen.dto.DataObjects.EventType getEventType() {
        return eventType_;
      }
      /**
       * <code>required .com.alexrnv.tripgen.dto.EventType eventType = 7;</code>
       */
      public Builder setEventType(com.alexrnv.tripgen.dto.DataObjects.EventType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000040;
        eventType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .com.alexrnv.tripgen.dto.EventType eventType = 7;</code>
       */
      public Builder clearEventType() {
        bitField0_ = (bitField0_ & ~0x00000040);
        eventType_ = com.alexrnv.tripgen.dto.DataObjects.EventType.CALL_START;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.alexrnv.tripgen.dto.Probe)
    }

    static {
      defaultInstance = new Probe(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.alexrnv.tripgen.dto.Probe)
  }

  public interface TripOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.alexrnv.tripgen.dto.Trip)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bytes tripId = 1;</code>
     */
    boolean hasTripId();
    /**
     * <code>required bytes tripId = 1;</code>
     */
    com.google.protobuf.ByteString getTripId();

    /**
     * <code>required int64 startTime = 2;</code>
     */
    boolean hasStartTime();
    /**
     * <code>required int64 startTime = 2;</code>
     */
    long getStartTime();

    /**
     * <code>required int64 endTime = 3;</code>
     */
    boolean hasEndTime();
    /**
     * <code>required int64 endTime = 3;</code>
     */
    long getEndTime();

    /**
     * <code>required bytes sensorId = 4;</code>
     */
    boolean hasSensorId();
    /**
     * <code>required bytes sensorId = 4;</code>
     */
    com.google.protobuf.ByteString getSensorId();

    /**
     * <code>optional bool completed = 5 [default = false];</code>
     */
    boolean hasCompleted();
    /**
     * <code>optional bool completed = 5 [default = false];</code>
     */
    boolean getCompleted();

    /**
     * <code>repeated .com.alexrnv.tripgen.dto.Probe probes = 6;</code>
     */
    java.util.List<com.alexrnv.tripgen.dto.DataObjects.Probe> 
        getProbesList();
    /**
     * <code>repeated .com.alexrnv.tripgen.dto.Probe probes = 6;</code>
     */
    com.alexrnv.tripgen.dto.DataObjects.Probe getProbes(int index);
    /**
     * <code>repeated .com.alexrnv.tripgen.dto.Probe probes = 6;</code>
     */
    int getProbesCount();
    /**
     * <code>repeated .com.alexrnv.tripgen.dto.Probe probes = 6;</code>
     */
    java.util.List<? extends com.alexrnv.tripgen.dto.DataObjects.ProbeOrBuilder> 
        getProbesOrBuilderList();
    /**
     * <code>repeated .com.alexrnv.tripgen.dto.Probe probes = 6;</code>
     */
    com.alexrnv.tripgen.dto.DataObjects.ProbeOrBuilder getProbesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.alexrnv.tripgen.dto.Trip}
   */
  public static final class Trip extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.alexrnv.tripgen.dto.Trip)
      TripOrBuilder {
    // Use Trip.newBuilder() to construct.
    private Trip(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Trip(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Trip defaultInstance;
    public static Trip getDefaultInstance() {
      return defaultInstance;
    }

    public Trip getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Trip(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              tripId_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              startTime_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              endTime_ = input.readInt64();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              sensorId_ = input.readBytes();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              completed_ = input.readBool();
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                probes_ = new java.util.ArrayList<com.alexrnv.tripgen.dto.DataObjects.Probe>();
                mutable_bitField0_ |= 0x00000020;
              }
              probes_.add(input.readMessage(com.alexrnv.tripgen.dto.DataObjects.Probe.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          probes_ = java.util.Collections.unmodifiableList(probes_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.alexrnv.tripgen.dto.DataObjects.internal_static_com_alexrnv_tripgen_dto_Trip_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.alexrnv.tripgen.dto.DataObjects.internal_static_com_alexrnv_tripgen_dto_Trip_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.alexrnv.tripgen.dto.DataObjects.Trip.class, com.alexrnv.tripgen.dto.DataObjects.Trip.Builder.class);
    }

    public static com.google.protobuf.Parser<Trip> PARSER =
        new com.google.protobuf.AbstractParser<Trip>() {
      public Trip parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Trip(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Trip> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TRIPID_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString tripId_;
    /**
     * <code>required bytes tripId = 1;</code>
     */
    public boolean hasTripId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes tripId = 1;</code>
     */
    public com.google.protobuf.ByteString getTripId() {
      return tripId_;
    }

    public static final int STARTTIME_FIELD_NUMBER = 2;
    private long startTime_;
    /**
     * <code>required int64 startTime = 2;</code>
     */
    public boolean hasStartTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 startTime = 2;</code>
     */
    public long getStartTime() {
      return startTime_;
    }

    public static final int ENDTIME_FIELD_NUMBER = 3;
    private long endTime_;
    /**
     * <code>required int64 endTime = 3;</code>
     */
    public boolean hasEndTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int64 endTime = 3;</code>
     */
    public long getEndTime() {
      return endTime_;
    }

    public static final int SENSORID_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString sensorId_;
    /**
     * <code>required bytes sensorId = 4;</code>
     */
    public boolean hasSensorId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required bytes sensorId = 4;</code>
     */
    public com.google.protobuf.ByteString getSensorId() {
      return sensorId_;
    }

    public static final int COMPLETED_FIELD_NUMBER = 5;
    private boolean completed_;
    /**
     * <code>optional bool completed = 5 [default = false];</code>
     */
    public boolean hasCompleted() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool completed = 5 [default = false];</code>
     */
    public boolean getCompleted() {
      return completed_;
    }

    public static final int PROBES_FIELD_NUMBER = 6;
    private java.util.List<com.alexrnv.tripgen.dto.DataObjects.Probe> probes_;
    /**
     * <code>repeated .com.alexrnv.tripgen.dto.Probe probes = 6;</code>
     */
    public java.util.List<com.alexrnv.tripgen.dto.DataObjects.Probe> getProbesList() {
      return probes_;
    }
    /**
     * <code>repeated .com.alexrnv.tripgen.dto.Probe probes = 6;</code>
     */
    public java.util.List<? extends com.alexrnv.tripgen.dto.DataObjects.ProbeOrBuilder> 
        getProbesOrBuilderList() {
      return probes_;
    }
    /**
     * <code>repeated .com.alexrnv.tripgen.dto.Probe probes = 6;</code>
     */
    public int getProbesCount() {
      return probes_.size();
    }
    /**
     * <code>repeated .com.alexrnv.tripgen.dto.Probe probes = 6;</code>
     */
    public com.alexrnv.tripgen.dto.DataObjects.Probe getProbes(int index) {
      return probes_.get(index);
    }
    /**
     * <code>repeated .com.alexrnv.tripgen.dto.Probe probes = 6;</code>
     */
    public com.alexrnv.tripgen.dto.DataObjects.ProbeOrBuilder getProbesOrBuilder(
        int index) {
      return probes_.get(index);
    }

    private void initFields() {
      tripId_ = com.google.protobuf.ByteString.EMPTY;
      startTime_ = 0L;
      endTime_ = 0L;
      sensorId_ = com.google.protobuf.ByteString.EMPTY;
      completed_ = false;
      probes_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTripId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStartTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEndTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSensorId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getProbesCount(); i++) {
        if (!getProbes(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, tripId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, startTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, endTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, sensorId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, completed_);
      }
      for (int i = 0; i < probes_.size(); i++) {
        output.writeMessage(6, probes_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, tripId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, startTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, endTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, sensorId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, completed_);
      }
      for (int i = 0; i < probes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, probes_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.alexrnv.tripgen.dto.DataObjects.Trip parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alexrnv.tripgen.dto.DataObjects.Trip parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alexrnv.tripgen.dto.DataObjects.Trip parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alexrnv.tripgen.dto.DataObjects.Trip parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alexrnv.tripgen.dto.DataObjects.Trip parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.alexrnv.tripgen.dto.DataObjects.Trip parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.alexrnv.tripgen.dto.DataObjects.Trip parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.alexrnv.tripgen.dto.DataObjects.Trip parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.alexrnv.tripgen.dto.DataObjects.Trip parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.alexrnv.tripgen.dto.DataObjects.Trip parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.alexrnv.tripgen.dto.DataObjects.Trip prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.alexrnv.tripgen.dto.Trip}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.alexrnv.tripgen.dto.Trip)
        com.alexrnv.tripgen.dto.DataObjects.TripOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alexrnv.tripgen.dto.DataObjects.internal_static_com_alexrnv_tripgen_dto_Trip_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alexrnv.tripgen.dto.DataObjects.internal_static_com_alexrnv_tripgen_dto_Trip_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alexrnv.tripgen.dto.DataObjects.Trip.class, com.alexrnv.tripgen.dto.DataObjects.Trip.Builder.class);
      }

      // Construct using com.alexrnv.tripgen.dto.DataObjects.Trip.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getProbesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tripId_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        startTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        endTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        sensorId_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        completed_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (probesBuilder_ == null) {
          probes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          probesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.alexrnv.tripgen.dto.DataObjects.internal_static_com_alexrnv_tripgen_dto_Trip_descriptor;
      }

      public com.alexrnv.tripgen.dto.DataObjects.Trip getDefaultInstanceForType() {
        return com.alexrnv.tripgen.dto.DataObjects.Trip.getDefaultInstance();
      }

      public com.alexrnv.tripgen.dto.DataObjects.Trip build() {
        com.alexrnv.tripgen.dto.DataObjects.Trip result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.alexrnv.tripgen.dto.DataObjects.Trip buildPartial() {
        com.alexrnv.tripgen.dto.DataObjects.Trip result = new com.alexrnv.tripgen.dto.DataObjects.Trip(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tripId_ = tripId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.startTime_ = startTime_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.endTime_ = endTime_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.sensorId_ = sensorId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.completed_ = completed_;
        if (probesBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            probes_ = java.util.Collections.unmodifiableList(probes_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.probes_ = probes_;
        } else {
          result.probes_ = probesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.alexrnv.tripgen.dto.DataObjects.Trip) {
          return mergeFrom((com.alexrnv.tripgen.dto.DataObjects.Trip)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.alexrnv.tripgen.dto.DataObjects.Trip other) {
        if (other == com.alexrnv.tripgen.dto.DataObjects.Trip.getDefaultInstance()) return this;
        if (other.hasTripId()) {
          setTripId(other.getTripId());
        }
        if (other.hasStartTime()) {
          setStartTime(other.getStartTime());
        }
        if (other.hasEndTime()) {
          setEndTime(other.getEndTime());
        }
        if (other.hasSensorId()) {
          setSensorId(other.getSensorId());
        }
        if (other.hasCompleted()) {
          setCompleted(other.getCompleted());
        }
        if (probesBuilder_ == null) {
          if (!other.probes_.isEmpty()) {
            if (probes_.isEmpty()) {
              probes_ = other.probes_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureProbesIsMutable();
              probes_.addAll(other.probes_);
            }
            onChanged();
          }
        } else {
          if (!other.probes_.isEmpty()) {
            if (probesBuilder_.isEmpty()) {
              probesBuilder_.dispose();
              probesBuilder_ = null;
              probes_ = other.probes_;
              bitField0_ = (bitField0_ & ~0x00000020);
              probesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getProbesFieldBuilder() : null;
            } else {
              probesBuilder_.addAllMessages(other.probes_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTripId()) {
          
          return false;
        }
        if (!hasStartTime()) {
          
          return false;
        }
        if (!hasEndTime()) {
          
          return false;
        }
        if (!hasSensorId()) {
          
          return false;
        }
        for (int i = 0; i < getProbesCount(); i++) {
          if (!getProbes(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.alexrnv.tripgen.dto.DataObjects.Trip parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.alexrnv.tripgen.dto.DataObjects.Trip) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString tripId_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes tripId = 1;</code>
       */
      public boolean hasTripId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bytes tripId = 1;</code>
       */
      public com.google.protobuf.ByteString getTripId() {
        return tripId_;
      }
      /**
       * <code>required bytes tripId = 1;</code>
       */
      public Builder setTripId(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        tripId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes tripId = 1;</code>
       */
      public Builder clearTripId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tripId_ = getDefaultInstance().getTripId();
        onChanged();
        return this;
      }

      private long startTime_ ;
      /**
       * <code>required int64 startTime = 2;</code>
       */
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 startTime = 2;</code>
       */
      public long getStartTime() {
        return startTime_;
      }
      /**
       * <code>required int64 startTime = 2;</code>
       */
      public Builder setStartTime(long value) {
        bitField0_ |= 0x00000002;
        startTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 startTime = 2;</code>
       */
      public Builder clearStartTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        startTime_ = 0L;
        onChanged();
        return this;
      }

      private long endTime_ ;
      /**
       * <code>required int64 endTime = 3;</code>
       */
      public boolean hasEndTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int64 endTime = 3;</code>
       */
      public long getEndTime() {
        return endTime_;
      }
      /**
       * <code>required int64 endTime = 3;</code>
       */
      public Builder setEndTime(long value) {
        bitField0_ |= 0x00000004;
        endTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 endTime = 3;</code>
       */
      public Builder clearEndTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        endTime_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString sensorId_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes sensorId = 4;</code>
       */
      public boolean hasSensorId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required bytes sensorId = 4;</code>
       */
      public com.google.protobuf.ByteString getSensorId() {
        return sensorId_;
      }
      /**
       * <code>required bytes sensorId = 4;</code>
       */
      public Builder setSensorId(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        sensorId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes sensorId = 4;</code>
       */
      public Builder clearSensorId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        sensorId_ = getDefaultInstance().getSensorId();
        onChanged();
        return this;
      }

      private boolean completed_ ;
      /**
       * <code>optional bool completed = 5 [default = false];</code>
       */
      public boolean hasCompleted() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool completed = 5 [default = false];</code>
       */
      public boolean getCompleted() {
        return completed_;
      }
      /**
       * <code>optional bool completed = 5 [default = false];</code>
       */
      public Builder setCompleted(boolean value) {
        bitField0_ |= 0x00000010;
        completed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool completed = 5 [default = false];</code>
       */
      public Builder clearCompleted() {
        bitField0_ = (bitField0_ & ~0x00000010);
        completed_ = false;
        onChanged();
        return this;
      }

      private java.util.List<com.alexrnv.tripgen.dto.DataObjects.Probe> probes_ =
        java.util.Collections.emptyList();
      private void ensureProbesIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          probes_ = new java.util.ArrayList<com.alexrnv.tripgen.dto.DataObjects.Probe>(probes_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.alexrnv.tripgen.dto.DataObjects.Probe, com.alexrnv.tripgen.dto.DataObjects.Probe.Builder, com.alexrnv.tripgen.dto.DataObjects.ProbeOrBuilder> probesBuilder_;

      /**
       * <code>repeated .com.alexrnv.tripgen.dto.Probe probes = 6;</code>
       */
      public java.util.List<com.alexrnv.tripgen.dto.DataObjects.Probe> getProbesList() {
        if (probesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(probes_);
        } else {
          return probesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.alexrnv.tripgen.dto.Probe probes = 6;</code>
       */
      public int getProbesCount() {
        if (probesBuilder_ == null) {
          return probes_.size();
        } else {
          return probesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.alexrnv.tripgen.dto.Probe probes = 6;</code>
       */
      public com.alexrnv.tripgen.dto.DataObjects.Probe getProbes(int index) {
        if (probesBuilder_ == null) {
          return probes_.get(index);
        } else {
          return probesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.alexrnv.tripgen.dto.Probe probes = 6;</code>
       */
      public Builder setProbes(
          int index, com.alexrnv.tripgen.dto.DataObjects.Probe value) {
        if (probesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureProbesIsMutable();
          probes_.set(index, value);
          onChanged();
        } else {
          probesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.alexrnv.tripgen.dto.Probe probes = 6;</code>
       */
      public Builder setProbes(
          int index, com.alexrnv.tripgen.dto.DataObjects.Probe.Builder builderForValue) {
        if (probesBuilder_ == null) {
          ensureProbesIsMutable();
          probes_.set(index, builderForValue.build());
          onChanged();
        } else {
          probesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.alexrnv.tripgen.dto.Probe probes = 6;</code>
       */
      public Builder addProbes(com.alexrnv.tripgen.dto.DataObjects.Probe value) {
        if (probesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureProbesIsMutable();
          probes_.add(value);
          onChanged();
        } else {
          probesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.alexrnv.tripgen.dto.Probe probes = 6;</code>
       */
      public Builder addProbes(
          int index, com.alexrnv.tripgen.dto.DataObjects.Probe value) {
        if (probesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureProbesIsMutable();
          probes_.add(index, value);
          onChanged();
        } else {
          probesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.alexrnv.tripgen.dto.Probe probes = 6;</code>
       */
      public Builder addProbes(
          com.alexrnv.tripgen.dto.DataObjects.Probe.Builder builderForValue) {
        if (probesBuilder_ == null) {
          ensureProbesIsMutable();
          probes_.add(builderForValue.build());
          onChanged();
        } else {
          probesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.alexrnv.tripgen.dto.Probe probes = 6;</code>
       */
      public Builder addProbes(
          int index, com.alexrnv.tripgen.dto.DataObjects.Probe.Builder builderForValue) {
        if (probesBuilder_ == null) {
          ensureProbesIsMutable();
          probes_.add(index, builderForValue.build());
          onChanged();
        } else {
          probesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.alexrnv.tripgen.dto.Probe probes = 6;</code>
       */
      public Builder addAllProbes(
          java.lang.Iterable<? extends com.alexrnv.tripgen.dto.DataObjects.Probe> values) {
        if (probesBuilder_ == null) {
          ensureProbesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, probes_);
          onChanged();
        } else {
          probesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.alexrnv.tripgen.dto.Probe probes = 6;</code>
       */
      public Builder clearProbes() {
        if (probesBuilder_ == null) {
          probes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          probesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.alexrnv.tripgen.dto.Probe probes = 6;</code>
       */
      public Builder removeProbes(int index) {
        if (probesBuilder_ == null) {
          ensureProbesIsMutable();
          probes_.remove(index);
          onChanged();
        } else {
          probesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.alexrnv.tripgen.dto.Probe probes = 6;</code>
       */
      public com.alexrnv.tripgen.dto.DataObjects.Probe.Builder getProbesBuilder(
          int index) {
        return getProbesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.alexrnv.tripgen.dto.Probe probes = 6;</code>
       */
      public com.alexrnv.tripgen.dto.DataObjects.ProbeOrBuilder getProbesOrBuilder(
          int index) {
        if (probesBuilder_ == null) {
          return probes_.get(index);  } else {
          return probesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.alexrnv.tripgen.dto.Probe probes = 6;</code>
       */
      public java.util.List<? extends com.alexrnv.tripgen.dto.DataObjects.ProbeOrBuilder> 
           getProbesOrBuilderList() {
        if (probesBuilder_ != null) {
          return probesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(probes_);
        }
      }
      /**
       * <code>repeated .com.alexrnv.tripgen.dto.Probe probes = 6;</code>
       */
      public com.alexrnv.tripgen.dto.DataObjects.Probe.Builder addProbesBuilder() {
        return getProbesFieldBuilder().addBuilder(
            com.alexrnv.tripgen.dto.DataObjects.Probe.getDefaultInstance());
      }
      /**
       * <code>repeated .com.alexrnv.tripgen.dto.Probe probes = 6;</code>
       */
      public com.alexrnv.tripgen.dto.DataObjects.Probe.Builder addProbesBuilder(
          int index) {
        return getProbesFieldBuilder().addBuilder(
            index, com.alexrnv.tripgen.dto.DataObjects.Probe.getDefaultInstance());
      }
      /**
       * <code>repeated .com.alexrnv.tripgen.dto.Probe probes = 6;</code>
       */
      public java.util.List<com.alexrnv.tripgen.dto.DataObjects.Probe.Builder> 
           getProbesBuilderList() {
        return getProbesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.alexrnv.tripgen.dto.DataObjects.Probe, com.alexrnv.tripgen.dto.DataObjects.Probe.Builder, com.alexrnv.tripgen.dto.DataObjects.ProbeOrBuilder> 
          getProbesFieldBuilder() {
        if (probesBuilder_ == null) {
          probesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.alexrnv.tripgen.dto.DataObjects.Probe, com.alexrnv.tripgen.dto.DataObjects.Probe.Builder, com.alexrnv.tripgen.dto.DataObjects.ProbeOrBuilder>(
                  probes_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          probes_ = null;
        }
        return probesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.alexrnv.tripgen.dto.Trip)
    }

    static {
      defaultInstance = new Trip(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.alexrnv.tripgen.dto.Trip)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_alexrnv_tripgen_dto_Probe_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_alexrnv_tripgen_dto_Probe_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_alexrnv_tripgen_dto_Trip_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_alexrnv_tripgen_dto_Trip_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\tdto.proto\022\027com.alexrnv.tripgen.dto\"\241\001\n" +
      "\005Probe\022\020\n\010sensorId\030\001 \002(\014\022\n\n\002id\030\002 \002(\003\022\016\n\006" +
      "cellId\030\003 \001(\014\022\017\n\007cellLat\030\004 \001(\001\022\017\n\007cellLon" +
      "\030\005 \001(\001\022\021\n\ttimestamp\030\006 \001(\003\0225\n\teventType\030\007" +
      " \002(\0162\".com.alexrnv.tripgen.dto.EventType" +
      "\"\226\001\n\004Trip\022\016\n\006tripId\030\001 \002(\014\022\021\n\tstartTime\030\002" +
      " \002(\003\022\017\n\007endTime\030\003 \002(\003\022\020\n\010sensorId\030\004 \002(\014\022" +
      "\030\n\tcompleted\030\005 \001(\010:\005false\022.\n\006probes\030\006 \003(" +
      "\0132\036.com.alexrnv.tripgen.dto.Probe*>\n\tEve" +
      "ntType\022\016\n\nCALL_START\020\000\022\023\n\017LOCATION_UPDAT",
      "E\020\001\022\014\n\010CALL_END\020\002B&\n\027com.alexrnv.tripgen" +
      ".dtoB\013DataObjects"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_com_alexrnv_tripgen_dto_Probe_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_alexrnv_tripgen_dto_Probe_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_alexrnv_tripgen_dto_Probe_descriptor,
        new java.lang.String[] { "SensorId", "Id", "CellId", "CellLat", "CellLon", "Timestamp", "EventType", });
    internal_static_com_alexrnv_tripgen_dto_Trip_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_alexrnv_tripgen_dto_Trip_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_alexrnv_tripgen_dto_Trip_descriptor,
        new java.lang.String[] { "TripId", "StartTime", "EndTime", "SensorId", "Completed", "Probes", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
